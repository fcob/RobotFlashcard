
//                  Configuration Robot RP12 Station 2221
//                  Customer Audi - Györ
// ********************************************************************************


// ------------------------------------------------------------------------------------------------
//   list of abbreviations

//   //E  --> comments which are labeled with an E should be arranged in the engineering
//   //V  --> comments which are labeled with an V should be verified/adjusted in pre commissioning
//   //   --> comments which aren't labeled with a character normally shouldn't be changed


[MC]

maxDeviation         = 100.0  //   Max. position deviation caused by  single joint limiter


[RC]

// ------------------------------------------------------------------------------------------------
//   

maxCmd               =  100   //E  Max. number of motion commands which are collected in the forward motion
                              //   range: 25 (Tracking) - 100 (Stop and Go)
managesDriveUpdate   =  0     //   0 = MCU
                              //   1 = RCU (till now only 0 is supported)
simulateStationPLC   =  0     //E  0 = don't simulate the signals from station PLC
                              //   1 = simulate the signals from station PLC --> normally used in simulation
simulateProcess      =  0     //E  0 = IEC-Devices are not simulated, missing hardware can lead to errors
                              //   1 = Set all IEC-Devices to simulationmode to prevent errors if no hardware is connected
activateLogging      =  1     //E  0 = motion loggers are deactivated
                              //   1 = Activate motion loggers -->  Logfiles are saved in C:\Control\protocol\log
                              //   and displayed on the userpage logger
activateLoggingMastering = 1  //   0 = mastering logger are deactivated        
                              //   1 = Activate mastering logger -->  Logfiles are saved in C:\Control\protocol\log                     
fieldBusSlaveType    =  0     //E  0 = Standard | 1 = Rehau


// ------------------------------------------------------------------------------------------------
//   observation of the drives

verificationDriveParam    =  1             //E  0 = verification of drive parameters won't be started
                                           //   1 = verification of drive parameters will be started
                                           //       this funktion checks whether some drive parameters are the same
                                           //       as the given values in MachineData.cfg e.g. "S0104"
useDragErrorObservation   =  1             //E  0 = observation of drag error won't be started
                                           //   1 = observation of drag error will be started --> observation if the given positions
                                           //       from the RC are the same that are read back from the drives
                                           //       When the difference is bigger than the value of "dragControlValue" in MachineData.cfg
                                           //       there will be set an error
useLagErrorObservation    =  1             //E  0 = observation of lag error won'tbe started
                                           //   1 = observation of lag error will be started --> observation if the drives doesn't
                                           //       move any more when the RC doesn't change the given position Values (after the in
                                           //       driveInPositionLagTime configured time) When the difference is bigger than the value
                                           //       of "lagControlValue" in MachineData.cfg there will be set an error
driveControlTimerName     =  "UpdTimer1"   //   name of the timer which should be the base for the observation


// ------------------------------------------------------------------------------------------------
//   initial settings for ketop hotplugging

focusedKinematic   =  -1   //   
nrOfKinematics     =   0   //   


// ------------------------------------------------------------------------------------------------ 
//   Configuration for 3DOnsite

timeOutDownload3DOnsite   =  5000   //   timeout in ms --> during downloading changes from 3DOnsite the files
                                    //   are locked for the RC. After the timeout the RC unlocks the files 
                                    //   without the enabling from 3DOnsite


// ------------------------------------------------------------------------------------------------ 
//   

[RC.KINEMATIC:0]
jogPeriod             =  0.08   //   the period between jogsegments in seconds (targetvalue)
maxJogPeriod          =  0.12   //   the period between jogsegments in seconds (maximal value))
backwardSegLength     =  0.10   //   length for segments when backward moving on path (in seconds)
masteringType         =  1      //E  0 = KUKA  --> all motion drives are referenced automatically
                                //   1 = Duerr --> only the drives from the main axis (1-3) and
                                //       the aux axis (7-?) are referenced automatically
hasProcess            =  1      //E  0 = there is no PCU related to this kinematic
                                //   1 = there is a PCU related to this kinematic
simulatesDriveState   =  0      //   0 = with drives --> the drives or the firmware set the drivecom states
                                //   1 = without drives --> RCU simulates the drivecom states (till now only 0 is supported)
useGoldenRepos        =  0      //E  0 = deactivate golden repos
                                //   1 = activate golden repos
delayRobotDrives      =  30     //V  difference in ms between the given position value from the
                                //   RC and the readback values from the drives --> this value is used
                                //   in the calculation for the triggers --> partly this time is caused by filters (e.g. P99 or
                                //   orderOfAxisFilter1) If filter settings are changed this value must be checked
torqueReductionT1     =  0      //E  0 = the torques limites in the drives will not be reduced whenn switching to T1 (fullSpeed = 0)
                                //   1 = the torques limites in the drives will be reduced whenn switching to T1 (fullSpeed = 0)
driveControlTime4ms    = 25     //   difference in ms between the given position value from the
driveControlTime5ms    = 31     //   RC and the readback values from the drives --> partly this time is caused by filters
driveControlTime6ms    = 38     //   (e.g. P99 or orderOfAxisFilter1). If filter settings are changed this value must be checked
driveControlTime8ms    = 50
driveControlTime10ms   = 60
driveInPositionLagTime = 200    //   time in ms --> see "useLagErrorObservation"
atomizerCollision      = 0      //E  activate atomizer-collision   0=inactive, 1=one sensor, 2=two sensors

// ------------------------------------------------------------------------------------------------
//   trigger

triggerPlaneDiameter   =  99900.0   //   the trigger plane is 9,99 meters --> nearly infinite
minAbsDeviFromSegEnd   =  30.0      //   mm
minRelDeviFromSegEnd   =  0.51      //   0.51 --> all triggers are segment trigger
                                    //   explanation for segment triggers: see G077
switchGunAtWaitPaintPos = 0         //   switch gun off/on automatically at macro WAIT_PAINTPOSITION                             
changeMaskingDevice = 0
enableCustomBits    = 0             //E  enable custom defined bits on the plc interface
enablePlcOrderByte  = 0             //E  enable order/state byte on the plc interface
OldPosAfterRestart  = 0             //E  after restart the positions before restart are restored (in simulation only)

// ------------------------------------------------------------------------------------------------
//   default dynamic values

// Default overlap settings for the kinematic
[RC.KINEMATIC:0.Overlap]
ovlTyp            =  1     //   0 = cartesian | 1 = dynamic
ovlDefTyp         =  2
ovlStartPrevSeg   =  1.0
ovlEndOnThisSeg   =  1.0

// Default overlap settings for the jogPath
[RC.KINEMATIC:0.JogPath.Overlap]
ovlTyp            =  1     //   0 = cartesian | 1 = dynamic
ovlDefTyp         =  1
ovlStartPrevSeg   =  0.5
ovlEndOnThisSeg   =  0.5

// Default repos settings
[RC.KINEMATIC:0.ReposPath.Dynamic.Joint]
velo              =  0.1   //   mm/s
acce              =  0.1   //   mm/s^2
dece              =  0.1   //   mm/s^2
jerk              =  1.0   //   mm/s^3

[RC.KINEMATIC:0.ReposPath.Dynamic.Cart]
velo              =  100.0    //   mm/s
acce              =  100.0    //   mm/s^2
dece              =  300.0    //   mm/s^2
jerk              =  100000   //   mm/s^3

[RC.KINEMATIC:0.ReposPath.Dynamic.Turn]
velo              =  20        //   deg/s
acce              =  300       //   deg/s^2
dece              =  300       //   deg/s^2
jerk              =  1000000   //   deg/s^3

// Default override settings
[RC.KINEMATIC:0.Override]
useSingleOvr      =  1         //   1 = one common override for jogging and automatic
vOvrInit          =  100       //   in this case, configured jog-values (vJogStep, vJogLargeStep, vJogInit, ...)
vJogInit          =  100       //   have no affect
autoInkrTime      =  0.7
inkrStepTime      =  0.2
vJogStep          =  5
vJogLargeStep     =  20
vOvrStep          =  1
vOvrLargeStep     =  5
largeStepDelay    =  4
disableKeysInAuto =  0
OvrForHoming      =  0.5      //  0.1 .. 1 --> 10%..100%

// ------------------------------------------------------------------------------------------------
//E  handling

[RC.KINEMATIC:0.Handler]
enableOrdering    =  1             //   0 = deactivate handling functionality (Used for ordering Robot)
                                   //   1 = activate handling functionality
enableHandling = 0                 //   0 = deactivate handling functionality (Used for receiving Handler)
                                   //   1 = activate handling functionality
Part1 = 0                          //   0 = This part isn't used by this Handler
                                   //   1 = This part is used (one handler is able to use more than one part)
                                   //   which physical part it is depends on the PLC interface
Part2 = 0
Part3 = 0
Part4 = 0

[RC.KINEMATIC:0.PartCheck.General]
Enable            =  0             //   0 = deactivate PartCheck functions
                                   //   1 = activate PartCheck functions
CountUnits        =  1             //   Number of observed units


[RC.KINEMATIC:0.PartCheck.Unit1]
Name              =  "RearDoorL"   //   name of the unit --> name is used in messages associated to the unit
                                   //   and for the handler tool userpage
Device_1          =  1             //   Number of associated Device | 1 --> Device1
                                   //   Up to 3 devices are possible --> Device_1, Device_2, Device_3

[RC.KINEMATIC:0.PartCheck.Device1]
Type              =  2             //   1 = switch | 2 = strain gauge (DMS)
Name              =  "DMS"         //   name of the device --> name is used in messages associated to the device
                                   //   and for the handler tool userpage
Bustype           =  1             //   1 = Profibus | 2 = Interbus | 3 = Devicenet | 4 = CANopen
Cardvendor        =  1             //   1 = Siemens | 2 = Phoenix
Cardtype          =  1             //   1 = ET200sGB61 | 2 = PhoenixCurrent
BoostBoxType      =  2             //   0=NoBoostBox, 1=1GainBit, 2=2GainBits, 3=4GainBits(no longer supported)
Directions        =  2             //   1 = X | 2 = XY | 3 = XYZ

// handler monitoring functions by robot drive torques
[RC.KINEMATIC:0.TorqueCheck]
enableMinMaxCheck = 0
enablePartDetection = 0

// ------------------------------------------------------------------------------------------------
//E  configuration vision system 

[RC.KINEMATIC:0.Vision]
TypeOfVisionSystem   =  0      //   0 = Off
                               //   1 = Standard PLC Interface
                               //   2 = RgsStandard Interface
                               //   3 = RgsOnline Interface
                               //   4 = Viva Interface

SubTypeOfVisionSystem = 1      //   1 = Absolute (Standard)      
                               //   2 = Absolute and relative  
                               
UseInterfaceInSim     = 0      //   0 = correction values are taken from the TeachView interface
                               //   normally used in combination with "simulatePLC = 1"
                                
[RC.KINEMATIC:0.Vision.Absolute]                                                                          
ScalingFactor_X      =  0.01   //   mm     factors to scale the transfered correction values from a vision system
ScalingFactor_Y      =  0.01    //   mm
ScalingFactor_Z      =  0.01    //   mm
ScalingFactor_A      =  0.001   //   deg
ScalingFactor_B      =  0.001   //   deg
ScalingFactor_C      =  0.001   //   deg
LinearLimit          =  50.0    //   Limit in mm for accepted correction values from a vision system --> at overstepping an error will be set
RotationLimit        =  5.0     //   Limit in deg for accepted correction values from a vision system --> at overstepping an error will be set
TypeOfCameraSystem   = 0        //   0 = no camera, 1 = camera fixed in cell, 2 = camera at robot arm
TriggeredPicture     = 0        //   0 = Picture trigger at stand still robot, 1 = Picture trigger at robot in motion
MultiTriggerForOneTask = 0      //   0 = one picture trigger for one vision measurement task, 1 =  multiple picture trigger for one vision measurement task



// ------------------------------------------------------------------------------------------------
//E  configuration VMT_BK system 

[RC.KINEMATIC:0.VMT_BK]
Enable          = 0             //  0=no BK, 1=activate it
RobotID         = 21            //  part of telegramm to VMT R11=11, R21=21, ...
LinearLimit     = 50.0          //  Limit in mm for accepted correction values from VMT_BK system --> at overstepping an error will be set
RotationLimit   =  5.0          //  Limit in deg for accepted correction values from VMT_BK system --> at overstepping an error will be set
ScalingFactor_X = 0.1           //  mm factors to scale the transfered correction values from VMT_BK system
ScalingFactor_Y = 0.1           //  mm
ScalingFactor_Z = 0.1           //  mm
ScalingFactor_A = 0.001         //  °
ScalingFactor_B = 0.001         //  °
ScalingFactor_C = 0.001         //  °
autoGeneratePP  = 0             //V 1 .. all points are automatically PathPoints for BK
                                //  up to now only 0 is possible
SimulateBK      = 0             //  1 to simulate the VMT_BK-Macros


// ------------------------------------------------------------------------------------------------
//E  configuration SmartRay system 

[RC.KINEMATIC:0.SmartRay]
Enable          = 0             //  0=no Smartray, 1=activate it
ScalFactorPos   = 0.01          //  [mm] factors to scale the transfered position values
ScalFactorOri   = 0.1           //  [°]  factors to scale the transfered orientation values
MaxCorrVal      = 50.0          //  limit for the deviation from the programmed path
MaxDeltaCorr    = 10.0          //  Limit in mm for accepted correction values
SignDisPos      = -1            //  -1 .. negative +1 .. positive   sign for position values Y
CriterionSeamEnd= 5             //  number of cycles with OnTrack = 0 for the recognition of the end of seam

[RC.KINEMATIC:0.SmartRay.HeightControl] // PID controller for the distance from sensor to the seam
Enable          = 1             //  0=Off, 1=On
Kp              = 0.025         //  parameter of the controller
Ki              = 0.0           //  parameter of the controller
Kd              = 0.0           //  parameter of the controller

[RC.KINEMATIC:0.SmartRay.PosControl] // PID controller for the deviation in Y
Enable          = 1             //  0=Off, 1=On
Kp              = 0.025         //  parameter of the controller
Ki              = 0.0           //  parameter of the controller
Kd              = 0.0           //  parameter of the controller

//not yet implemented
[RC.KINEMATIC:0.SmartRay.RollControl] // currently not used
Enable          = 0             //V  0=Off, 1=On
Kp              = 0.0           //  parameter of the controller
Ki              = 0.0           //  parameter of the controller
Kd              = 0.0           //  parameter of the controller

//not yet implemented
[RC.KINEMATIC:0.SmartRay.PitchControl] // currently not used
Enable          = 0             //V  0=Off, 1=On
Kp              = 0.0           //  parameter of the controller
Ki              = 0.0           //  parameter of the controller
Kd              = 0.0           //  parameter of the controller


// ------------------------------------------------------------------------------------------------
//E  configuration tool measurement (necessary for hemflange application) e.g. a lightbar is used

[RC.KINEMATIC:0.ToolMeasure]
Enable                  = 0         //  0=no tool measurement 1=activate it
MaxToolAdjustment_X     = 1.5       //  mm limit for the deviation
MaxToolAdjustment_Y     = 1.5       //  mm limit for the deviation
MaxToolAdjustment_Z     = 1.0       //  mm limit for the deviation
MaxToolAdjustment_Abs   = 1.0       //  mm limit for the deviation
UseObjectCoord          = 1         //  0 = WORLD, 1 = OBJECT (lightbar must be defined as an object coordinate system) 
UseTcpCoord             = 1         //  0 = FLANGE, 1 = TOOL (transform correction values from tool to flange)
ObjectMeasureDirections = 2         //  1 = X_Y,  2 = X_Z,  3 = Y_Z
LightbarPoint3_X        = 0.0       //  X-Coordinate 3rd point of lightbar frame
LightbarPoint3_Y        = -1000.0   //  Y-Coordinate 3rd point of lightbar frame
LightbarPoint3_Z        = 1000.0    //  Z-Coordinate 3rd point of lightbar frame


// ------------------------------------------------------------------------------------------------
//E  configuration sensor based object measurement 

[RC.KINEMATIC:0.ObjMeasure]
Enable                  = 0         //  0=no object measurement 1=activate it
Limit                   = 15.5      //  mm limit for the deviation --> at overstepping an error will be set



// ------------------------------------------------------------------------------------------------
//E  configuration tracking

[RC.Tracking]
tracking        =  0   //   0=StopGo | 1=Linetracking | 2=Railtracking
trackingStyle   =  0   //   Phase 0 (till now only 0 is supported)

//E  configuration of rail tracking
[RC.KINEMATIC:0.Tracking]
railAxisNr   =  6   //   number of tracking axis (Axis 1 <-> railAxisNr=0 etc.)
signOfRail   =  1   //   Only 1 and -1 are allowed!  --> direction of rail
                    //   if the tracking axis (A7) moves in the wrong direction --> change sign 

//   correction of a displacement between world and the conveyor frame

//   X coordinate of the world frame is in the direction of the conveyor for the following standard preset 
[RC.Tracking.ConveyorPreLink]
x   =  0
y   =  0
z   =  0
a   =  0
b   =  90
c   =  0

//   X coordinate of the world frame is in the direction of the conveyor for the following standard preset 
[RC.Tracking.ConveyorPostLink] 
x   =  0
y   =  0
z   =  0
a   =  0
b   =  -90
c   =  0


// ------------------------------------------------------------------------------------------------
//E  configuration for Fixpos, Bypass, Unselect

//   basic configuration for Bypass and Unselect
[RC.KINEMATIC:0]
robotTyp               =  1     //   1 = Paint Robot 
                                //   Only Y is checked for bypass and unselect (if nothing further
                                //   is configured in the detail configuration)
                                //   2 = Hood Opener
                                //   X and Z are checked to assure that there is no feedback for
                                //   unselect and bypass when a part is caught (if nothing further
                                //   is configured in the detail configuration)
                                //   3 = Door Opener
                                //   Y and Z are checked to assure that there is no feedback for
                                //   unselect and bypass when a part is caught (if nothing further
                                //   is configured in the detail configuration)

//   detail configuration for Fixpos, Bypass, Unselect
[RC.KINEMATIC:0.Fixpos]
ToleranceMainAxes      =  1.0   //   Tolerance in deg for ckecking "In Position"  Joint 1-6
ToleranceAuxAxes       =  2.0   //   Tolerance in mm for ckecking "In Position"  Joint 7
OneRobotPerSide        =  0     //   only one robot per side
MovingUnderAboveBody   =  0     //   check Z-Coord for bypass
MovingCrosswise        =  0     //   rail is right-angled to the conveyor or arms 1 and 2 of a robot without
                                //   rail are parallel to the conveyor when axis one is in zero position

//   space configuration for Bypass and Unselect
//   For observation whether the robot is in Bypass respectively Unselect space,
//   for this two spaces a cuboid has to be defined respectively.
//   For space directions which are commented out, preset values are taken.
//   If a space direction is commented out but according to the following matrix
//   a non preset value is expected, then an error will be set.
//   The preset values are very big, so that this directions aren´t observed.
//   Axis 7 is a direction apart, independently from X,Y,Z.
//   If a preset value doesn't fit the user requirements, it's possible to comment in
//   the space direction in space config.
//   The configured value(s) will be used for the respective space(s) (BY/UN).

//   configuration of Bypass space
[RC.KINEMATIC:0.Fixpos.Bypass]
//X_sign    =     0   //   0 = bypass is negative from teached point, 1 = positive
//X_size    =  5000   //   size of the bypass area in direction X-WorldCoord
Y_sign    =     1     //   0 = bypass is negative from teached point, 1 = positive
Y_size    =  5000     //   size of the bypass area in direction Y-WorldCoord
//Z_sign    =     1   //   0 = bypass is negative from teached point, 1 = positive
//Z_size    =  5000   //   size of the bypass area in direction Z-WorldCoord
//A7_sign   =     1   //   0 = bypass is negative from teached point, 1 = positive
//A7_size   =  5000   //   size of the bypass area for aux-joint

//   configuration of Unselect space
[RC.KINEMATIC:0.Fixpos.Unselect]
X_sign    =     0   //   0 = unselect is negative from teached point, 1 = positive
X_size    = 10000   //   size of the unselect area in direction X-WorldCoord
Y_sign    =     1     //   0 = unselect is negative from teached point, 1 = positive
Y_size    =  5000     //   size of the unselect area in direction Y-WorldCoord
//Z_sign    =     1   //   0 = unselect is negative from teached point, 1 = positive
//Z_size    =  5000   //   size of the unselect area in direction Z-WorldCoord
A7_sign   =     0   //   0 = unselect is negative from teached point, 1 = positive
A7_size   =  5000   //   size of the unselect area for aux-joint

// ------------------------------------------------
//   list of abbreviations for the following matrix

//   R-cross        -->   Robot with rail right-angled to the conveyor or robot whithout rail whose arms 1 and 2
//                        are parallel to the conveyor when axis one is in zero position
//   R/UA-cross     -->   Robot with rail right-angled to the conveyor or robot whithout rail whose arms 1 and 2
//                        are parallel to the conveyor when axis one is in zero position and robot is placed under
//                        or above the object
//   R-side         -->   Robot with rail parallel to the conveyor or robot whithout rail whose arms 1 and 2
//                        are right-angled to the conveyor when axis one is in zero position
//   R/UA-side      -->   Robot with rail parallel to the conveyor or robot whithout rail whose arms 1 and 2
//                        are right-angled to the conveyor when axis one is in zero position and robot is placed 
//                        under or above the object
//   BY             -->   Bypass
//   UN             -->   Unselect
//   TwoRobPerSide  -->   negation of OneRobotPerSide
//   Crosswise      -->   MovingCrosswise
//   UnderAbove     -->   MovingUnderAboveBody
//   x              -->   obligatory configuration
//   o              -->   optional configuration

// --------
//   matrix

//                 |-------------|-------------|-------------|-------------|-------------|-------------|
//                 |   R-cross   | R/UA-cross  |    R-side   |   R/UA-side |  HoodOpener |  DoorOpener |
//                 |-------------|-------------|-------------|-------------|-------------|-------------|
//                 |  BY  |  UN  |  BY  |  UN  |  BY  |  UN  |  BY  |  UN  |  BY  |  UN  |  BY  |  UN  |
//                 |-------------|-------------|-------------|-------------|-------------|-------------|
//                               |             |             |             |             |             |
//  basic config                 |             |             |             |             |             |
//   |-------------|-------------|-------------|-------------|-------------|-------------|-------------|
//   |  PaintRobot |      x      |      x      |      x      |      x      |      -      |      -      |
//   |-------------|-------------|-------------|-------------|-------------|-------------|-------------|
//   |  HoodOpener |      -      |      -      |      -      |      -      |      x      |      -      |
//   |-------------|-------------|-------------|-------------|-------------|-------------|-------------|
//   |  DoorOpener |      -      |      -      |      -      |      -      |      -      |      x      |
//   |-------------|-------------|-------------|-------------|-------------|-------------|-------------|
//                               |             |             |             |             |             |
//  detail config                |             |             |             |             |             |
//   |-------------|-------------|-------------|-------------|-------------|-------------|-------------|
//   |TwoRobPerSide|      o      |      o      |      o      |      o      |      o      |      o      |
//   |-------------|-------------|-------------|-------------|-------------|-------------|-------------|
//   |  Crosswise  |      x      |      x      |      -      |      -      |      -      |      -      |
//   |-------------|-------------|-------------|-------------|-------------|-------------|-------------|
//   |  UnderAbove |      -      |      x      |      -      |      x      |      -      |      -      |
//   |-------------|-------------|-------------|-------------|-------------|-------------|-------------|
//                               |             |             |             |             |             |
//  space config                 |             |             |             |             |             |
//   |-------------|-------------|-------------|-------------|-------------|-------------|-------------|
//   |       X     |  -   |  x   |  -   |  x   |  -   |  o   |  -   |  o   |  x   |  x   |  -   |  o   |
//   |-------------|-------------|-------------|-------------|-------------|-------------|-------------|
//   |       Y     |  x   |  o   |  -   |  o   |  x   |  x   |  -   |  x   |  -   |  -   |  x   |  x   |
//   |-------------|-------------|-------------|-------------|-------------|-------------|-------------|
//   |       Z     |  -   |  -   |  x   |  -   |  -   |  -   |  x   |  -   |  x   |  x   |  x   |  x   |
//   |-------------|-------------|-------------|-------------|-------------|-------------|-------------|
//   |       A7    |  x   |  o   |  -   |  o   |  -   |  o   |  -   |  o   |  -   |  o   |  -   |  o   |
//   |-------------|-------------|-------------|-------------|-------------|-------------|-------------|


//   Example how to read the matrix

//   Configuration of a DoorOpener:
//   DoorOpener has to be chosen in the basic configuration (robotTyp = 3)
//        |-------------|-------------|
//   -->  |  DoorOpener |      x      |
//        |-------------|-------------|
//
//   If DoorOpener is configured, then Y and Z coordinates have to be configured
//   for Unselect and Bypass space
//        |-------------|-------------|
//        |       Y     |  x   |  x   |
//   -->  |-------------|-------------|
//        |       Z     |  x   |  x   |
//        |-------------|-------------|
//
//   If additionally TwoRobPerSide is chosen in the detail
//   configuration (OneRobotPerSide = 0)
//        |-------------|-------------|
//   -->  |TwoRobPerSide|      o      |
//        |-------------|-------------|
//
//   then X coordinate for Unselect space and A7 coordinate
//   for Unselect space have to be configured
//        |-------------|-------------|
//        |      X      |  -   |  o   |
//   -->  |-------------|-------------|
//        |      A7     |  -   |  o   |
//        |-------------|-------------|
//
//   If a Robot has no A7 (AuxJoint) A7_sign and A7_size doesn't have to be configured (commented in)
//   and won't be checked


// ------------------------------------------------------------------------------------------------
//E  Configuration of the Gripper points

//   the following points are used for the functionalityies bypass, unselect and virtual wall
//   Therefore at least one vector has to be configured to get a correct bypass/unselect information
[RC.KINEMATIC:0.Gripper]
nrOfVectors   =  6   //   up to 16 gripper points are allowed
                     //   the configured number of Vectors are interpreted and expected
name          =  "TCP+Elbow"   //   name of the observation


[RC.KINEMATIC:0.Gripper.Vector1]
Type          =  2   //   0 = TCP | 1 = Elbow | 2 = Flange
                     //   If TCP is chosen as reference point for the vector, the gripper point depends on the set tool
                     //   elbow and flange are fixed reference points
//   flange
x   =  0.0
y   =  0.0
z   =  0.0

[RC.KINEMATIC:0.Gripper.Vector2]
Type   =  2    //   0 = TCP | 1 = Elbow | 2 = Flange
//   tcp_0
x      =     0.0
y      =  -175.4
z      =   294.227

[RC.KINEMATIC:0.Gripper.Vector3]
Type          =  1   //   0 = TCP | 1 = Elbow | 2 = Flange
                     //   If TCP is chosen as reference point for the vector, the gripper point depends on the set tool
                     //   elbow and flange are fixed reference points
//   A3 links oben
x   =   110.0
y   =  -350.0
z   =  -190.0

[RC.KINEMATIC:0.Gripper.Vector4]
Type   =  1    //   0 = TCP | 1 = Elbow | 2 = Flange
//   A3 links unten
x      =   -80.0
y      =  -350.0
z      =  -210.0

[RC.KINEMATIC:0.Gripper.Vector5]
Type          =  1   //   0 = TCP | 1 = Elbow | 2 = Flange
                     //   If TCP is chosen as reference point for the vector, the gripper point depends on the set tool
                     //   elbow and flange are fixed reference points
//   A3 rechts oben
x   =  110.0
y   =  400.0
z   = -190.0

[RC.KINEMATIC:0.Gripper.Vector6]
Type   =  1    //   0 = TCP | 1 = Elbow | 2 = Flange
//   A3 rechts unten
x      =   -80.0
y      =   400.0
z      =  -220.0

// ------------------------------------------------------------------------------------------------
//E  configuration of the functionality VirtualWall

[RC.KINEMATIC:0.VirtualWall]
nrOfBlocks   = 2              //   How many blocks are interpreted and expected

[RC.KINEMATIC:0.VirtualWall.Block1]   //   name and configuration of a block for the virtual wall
                                      //   It's possible to configure more then one block per kinematic,
                                      //   up to 16 Blocks (.Block1 - .Block16) are possible
                                     
name         =  "ArbeitsRaumKubus"   //   name of the block - this name is used in messages associated to the block
special      =  0                 //   0 = block is always active
                                  //   1 = block is deactivated when the fullspeed flag isn't set - normally T1
active       =  1                 //   1 = activate the block | 0 = deactivate the block
type         =  1                 //   0 = no go area - there will be an error when any gripper point enters this block
                                  //   1 = working area - there will be an error when any gripper point leaves this block

//   point in world coordinates relative to which a block of the virtual wall is created
//   the values from SizeX, SizeY and SizeZ define the size of the block
BaseX =    -5480
BaseY =    -2720
BaseZ =     -870
BaseA =        0
BaseB =        0
BaseC =        0

//   Size of the virtual wall in each space direction - only positive values are allowed
SizeX =     9960
SizeY =     5440
SizeZ =     4700

[RC.KINEMATIC:0.VirtualWall.Block2]   //   name and configuration of a block for the virtual wall
                                      //   It's possible to configure more then one block per kinematic,
                                      //   up to 16 Blocks (.Block1 - .Block16) are possible
                                     
name         =  "SperrRaum_FT"    //   name of the block - this name is used in messages associated to the block
special      =  0                 //   0 = block is always active
                                  //   1 = block is deactivated when the fullspeed flag isn't set - normally T1
active       =  1                 //   1 = activate the block | 0 = deactivate the block
type         =  0                 //   0 = no go area - there will be an error when any gripper point enters this block
                                  //   1 = working area - there will be an error when any gripper point leaves this block

//   point in world coordinates relative to which a block of the virtual wall is created
//   the values from SizeX, SizeY and SizeZ define the size of the block
BaseX =    -5480
BaseY =     -530
BaseZ =     -870
BaseA =        0
BaseB =        0
BaseC =        0

//   Size of the virtual wall in each space direction - only positive values are allowed
SizeX =     9960
SizeY =     1060
SizeZ =      540

 
// ------------------------------------------------------------------------------------------------
//E  configuration homing 

[RC.KINEMATIC:0.Homing]
Enable                  = 0              //E 0=homing disabled 1=homing enabled
EnablePreHoming         = 0              //E 0=prehoming disabled 1=prehoming enabled
EnableHomingAfterRestart= 0              //E 1=Homing after Restart possible
EnableGoDirectHome      = 0              //E homing from waiting position
OvrForHoming            = 0.5            //E 0.1 .. 1 --> 10%..100%
ExtensionHoming         = "Hom_"         //E homing main program := Hom_ + main program
ExtensionPreHoming      = "PreHom_"      //E prehoming main program := PreHom_ + main program
LevelOfModules          = 1              //E 1 = main calls painting modules
                                         //E 2 = main calls subprograms which call the painting modules

